[{"/Users/avihaymaman/Desktop/dropdown/src/index.tsx":"1","/Users/avihaymaman/Desktop/dropdown/src/App.tsx":"2","/Users/avihaymaman/Desktop/dropdown/src/components/Dropdown/Dropdown.tsx":"3","/Users/avihaymaman/Desktop/dropdown/src/components/Dropdown/DropdownItem.tsx":"4","/Users/avihaymaman/Desktop/dropdown/src/components/Card.tsx":"5","/Users/avihaymaman/Desktop/dropdown/src/components/Summary.tsx":"6"},{"size":273,"mtime":1685481813583,"results":"7","hashOfConfig":"8"},{"size":2931,"mtime":1686125358310,"results":"9","hashOfConfig":"8"},{"size":1832,"mtime":1685993483117,"results":"10","hashOfConfig":"8"},{"size":1127,"mtime":1685995107595,"results":"11","hashOfConfig":"8"},{"size":4162,"mtime":1686127069620,"results":"12","hashOfConfig":"8"},{"size":3459,"mtime":1686145854265,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"14d4tum",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"17"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/avihaymaman/Desktop/dropdown/src/index.tsx",[],[],[],"/Users/avihaymaman/Desktop/dropdown/src/App.tsx",[],[],"/Users/avihaymaman/Desktop/dropdown/src/components/Dropdown/Dropdown.tsx",[],[],"/Users/avihaymaman/Desktop/dropdown/src/components/Dropdown/DropdownItem.tsx",[],[],"/Users/avihaymaman/Desktop/dropdown/src/components/Card.tsx",["34","35","36","37"],[],"import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport '../style/Card.css'\n\ntype Product = {\n  id?: string\n  name?: string\n  color?: string\n  price?: number\n  stock?: number\n  totalPrice?: number\n  userQuantity?: number\n}\n\ntype CardProps = {\n  productId: string\n  closeCard: Function\n  updateProduct: Function\n}\n\nexport const Card = ({productId, closeCard, updateProduct}: CardProps) => {\n  const mock = [\n    {\n      id: 'apple',\n      name: 'Apple',\n      color: 'red',\n      price: 2,\n      stock: 10,\n    },\n    {\n      id: 'carrot',\n      name: 'Carrot',\n      color: 'orange',\n      price: 4,\n      stock: 30,\n    },\n    {\n      id: 'melone',\n      name: 'Melone',\n      color: 'orange',\n      price: 6,\n      stock: 10,\n    },\n    {\n      id: 'pear',\n      name: 'Pear',\n      color: 'orange',\n      price: 2,\n      stock: 1,\n    },\n    {\n      id: 'lemon',\n      name: 'Lemon',\n      color: 'yellow',\n      price: 6,\n      stock: 90,\n    },\n    {\n      id: 'orange',\n      name: 'Orange',\n      color: 'orange',\n      price: 10,\n      stock: 0,\n    },\n    {\n      id: 'salad',\n      name: 'Salad',\n      color: 'green',\n      price: 5,\n      stock: 20,\n    },\n  ] as Product[]\n  const baseUrl = 'https://front-end-exam-dot-winky-apis.ew.r.appspot.com/'\n  const [product, setProduct] = useState<Product | undefined>(undefined)\n  const [icon, setIcon] = useState('')\n  const [hasQuantity, setHasQuantity] = useState(true)\n  const [quantity, setQuantity] = useState(0)\n\n  useEffect(() => {\n    axios.get(`${baseUrl}products/${productId}`)\n    .then((res) => {\n      console.log(res)\n      /* alert('The product was given successfully') */\n      if(!product) setProduct(res.data)\n    })\n    .catch(function (error) {\n      console.log(error)\n    })\n    /* const findCorrectProductFromMock = mock.findIndex((mockProduct: Product) => {\n      return mockProduct.id === productId\n    })\n    if(!product) setProduct(mock[findCorrectProductFromMock]) */\n  }, [])\n\n  useEffect(() => {\n    const importedIcon = async () => {\n      const iconPath = await import(`../images/${productId.toLowerCase()}.svg`)\n      setIcon(iconPath.default)\n      return iconPath\n    }\n    importedIcon()\n  }, [productId])\n\n  useEffect(() => {\n    if(product?.stock === 0) setHasQuantity(false)\n    if(product) updateProduct(product)\n  }, [product])\n\n  const handleCloseCard = () => {\n    closeCard(product?.id)\n  }\n\n  const handleQuantity = (event:any) => {\n    const value = event.target.value;\n    setQuantity(value)\n    const totalPrice = value * (product?.price || 0)\n    const updateStock = (product?.stock || 0)-quantity\n    setProduct({...product,\n      stock: updateStock,\n    })\n    setProduct({\n      ...product,\n      userQuantity: value,\n      totalPrice: totalPrice,\n    })\n  }\n\n  return (\n    <div className='card-container'>\n      <div className=\"header\">\n      {product && <div className=\"fruit\"\n             style={{backgroundColor: (product?.color || '')}}>\n          <img src={icon} \n               alt=\"product image\"\n               className='card-img'/>\n          <label className=\"product-title\">{product?.name}</label>\n        </div>\n      }\n\n        <div className=\"cancel-container\"\n        onClick={handleCloseCard}>\n          <div className=\"cancel-fruit\">\n            x\n          </div>\n        </div>\n      </div>\n      <div className=\"quantity\">\n        <div className=\"quantity-header\">\n          <label className='quantity-label'>Selected quantity:</label>\n          {product &&\n            <div>\n              <span className={hasQuantity? 'quantity-number' : 'quantity-number zero-quantity'}>{quantity}</span> KG\n            </div>\n          }\n        </div>\n        {product &&\n        <input type=\"range\"\n               min='0'\n               max={product?.stock?.toString() ?? 0}\n               defaultValue=\"0\"\n               onChange={handleQuantity}\n               className='slider'/>\n        }\n      </div>\n      {product &&\n      <div className=\"price\">\n        Price: <span className={hasQuantity? 'price-number' : 'price-number zero-quantity'}>${quantity*(product?.price || 0)}</span>\n      </div>\n}\n    </div>\n  );\n}\n","/Users/avihaymaman/Desktop/dropdown/src/components/Summary.tsx",[],[],{"ruleId":"38","severity":1,"message":"39","line":22,"column":9,"nodeType":"40","messageId":"41","endLine":22,"endColumn":13},{"ruleId":"42","severity":1,"message":"43","line":93,"column":6,"nodeType":"44","endLine":93,"endColumn":8,"suggestions":"45"},{"ruleId":"42","severity":1,"message":"46","line":107,"column":6,"nodeType":"44","endLine":107,"endColumn":15,"suggestions":"47"},{"ruleId":"48","severity":1,"message":"49","line":133,"column":11,"nodeType":"50","endLine":135,"endColumn":38},"@typescript-eslint/no-unused-vars","'mock' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'product' and 'productId'. Either include them or remove the dependency array.","ArrayExpression",["51"],"React Hook useEffect has a missing dependency: 'updateProduct'. Either include it or remove the dependency array. If 'updateProduct' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["52"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",{"desc":"53","fix":"54"},{"desc":"55","fix":"56"},"Update the dependencies array to be: [product, productId]",{"range":"57","text":"58"},"Update the dependencies array to be: [product, updateProduct]",{"range":"59","text":"60"},[1979,1981],"[product, productId]",[2336,2345],"[product, updateProduct]"]